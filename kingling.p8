pico-8 cartridge // http://www.pico-8.com
version 35
__lua__
function _init()

	-- anim
	anim_timer = 0
	banana_anim = 16
	
	--physics
	gravity = 5
	friction = 0.45

	--player 
	player={
    -- start coords
	x=4,
    y=64,
	-- sprite
    w=8,
    h=16,
    flp=false,
	-- movement
	--jumps
	j_force=10, --initial y force when jumping
	x_force=2, -- initial x force when jumping
	y_acc=1, -- accel modifiers (for lerps)
	x_acc=1.25,
	--climbing
    c_acc=0.3,
	max_yspd=3,
	-- states
	jumped=false,
	climbing=true,
	score=0
  	}

	--tire
	tire={
	spr=56,
	x=72,
	y=64,
	w=8,
	h=8,
	anim=false
	}

	--general
	t = 0 --general timer


	--waves
	evens = {2,4,6,8}
	odds = {3,5,7}
	wave_types = {"xsine","ysine","slime","leafs"}
	bananas = {}
	wavetimer = 0
	waveintensity = 5

	--music
	--music(0) -- play music from pattern 0

	create_wave(rnd(6)+5,rnd(2)+1,"xsine") --start game with a wave
end 
 
-- math helpers
function box_hit(
	x1,y1,
	w1,h1,
	x2,y2,
	w2,h2)

	hit=false
	local xd=abs((x1+(w1/2))-(x2+(w2/2)))
	local xs=w1*0.5+w2*0.5
	local yd=abs((y1+(h1/2))-(y2+(h2/2)))
	local ys=h1/2+h2/2
	if xd<xs and yd<ys then 
		hit=true 
	end

	return hit
end

-- TIRE
function object_update(object)
-- sine movement
	ti = t*3
	object.x = object.x + sin(ti/80)*2
end


-- PLAYER -- All player functions, gets called in update()
function player_update()

-- MOVEMENTS

-- apply physics when not climbing

	if not player.climbing then
		player.y += gravity
	end

-- if jump button is held down increase y. if not cancel jump state

	if btn(üÖæÔ∏è) and player.jumped then
			jumpforce = player.j_force*y_acc
			player.y -= player.j_force*y_acc
			if y_acc >= 0 then
				y_acc -= 0.05
			else
				y_acc = 0
			end
	elseif not btn(üÖæÔ∏è) then
		player.jumped = false
	end

-- jump pressed while climbing. set state to jumped and init jump values
	if btn(üÖæÔ∏è) and player.climbing and not player.jumped then
		player.climbing = false
		player.jumped = true
		y_acc = player.y_acc
		x_acc = player.x_acc
		xspd = 0
		last_dir = 0
	end

	-- Aerial (x) movement
	if not player.climbing then
		if btn(‚¨ÖÔ∏è) then
			xspd = player.x_force*x_acc
			if x_acc >= 0 then
				x_acc -= 0.02
			else
				x_acc = 0
			end
			xdir = -1
			last_dir = xdir

		elseif btn(‚û°Ô∏è) then
			xspd = player.x_force*x_acc
			if x_acc >= 0 then
				x_acc -= 0.02
			else
				x_acc = 0
			end
			xdir = 1
			last_dir = xdir
		
		else 
			if xspd >= 0 then
				xspd -= 0.5
			else
				xspd = 0
			end
			xdir = last_dir
		end
		player.x += xspd*xdir
	end
	

	-- climbing (y) movement
	if not player.jumping then
		if btn(‚¨ÜÔ∏è) then
			if yspd <= player.max_yspd then
			 yspd += player.c_acc
			else
			 yspd = player.max_yspd
			end
			ydir = -1*friction
		elseif btn(‚¨áÔ∏è) then
			if yspd <= player.max_yspd then
			 yspd += player.c_acc
			else
			 yspd = player.max_yspd
			end
			ydir = 1
		else 
			if yspd != null and yspd > 0 then
				yspd -= 0.2
			else
				ydir = 0
				yspd = 0
			end
		end
		player.y += yspd*ydir
	end

-- COLLISIONS

-- vine collision
	if not btn(üÖæÔ∏è) and player.x < 5 or player.x > 118 then
		player.jumped = false
		player.climbing = true
	end

-- tire collision
	if box_hit(player.x,player.y,player.w,player.h,tire.x,tire.y,tire.w,tire.h) then
		tire.anim = true
		player.jumped = true
		y_acc = player.y_acc
		x_acc = player.x_acc
		
	end

	for banana in all(bananas) do
		if box_hit(player.x,player.y,player.w,player.h,banana.x,banana.y,8,8) then
				banana.type = 'picked'
				player.score += 10
		end
	end
-- general out of bounds collision

-- left border
	if player.x < 2 then
		player.x = 2
	end
--right border
	if player.x > 126 then
		player.x = 126
	end
--falls in pit
	if player.y > 128 then
		run()
	end

end


-- BANANAS

-- create function

function create_banana(id,x,y,yspd,type)
   banana={id=id,x=x,y=y,yspd=yspd,type=type}
   add(bananas,banana)
end

function create_wave(size,yspd,type)
	if type == "xsine" then
		for i=1,size do
			create_banana(i,64,i*4,yspd,type) 
		end
	end
	if type == "ysine" then
		offs = flr(128/(size))
		tx = flr(offs/2)
		for i=0,size do
			create_banana(i,((offs*i)+tx),0,yspd,type) 
		end
	end
	if type == "slime" then
		offs = flr(128/(size))
		tx = flr(offs/2)
		for i=0,size do
			create_banana(i,((offs*i)+tx),0,yspd,type) 
		end
	end
	if type == "leafs" then
		offs = flr(128/(size))
		tx = flr(offs/2)
		for i=0,size do
			create_banana(i,((offs*i)+tx),0,yspd,type) 
		end

	end
end

-- update banana positions based on wave type

function banana_update()
i = 0
	for banana in all(bananas) do --banana update loop
		-- vertical snaking line
		if banana.type == "xsine" then
			ti = t+banana.id*4
			banana.x = 64+(sin(ti/50)*8)
			banana.y += banana.yspd
			i+=1
		end
		--spaced line with alernating sine
		if banana.type == "ysine" then
			if i % 2 == 0 then
				ti = t+1.5
			else
				ti = t
			end
			banana.y = banana.y + (sin(ti/20)*banana.yspd) + 0.5
			i+=1
		end
		-- spaced line that falls like a leaf
		if banana.type == "leafs" then
			banana.x = banana.x + sin(t/50)*0.5
			banana.y += banana.yspd + sin(t/20)
		end
		--spaced line, slows down and speeds up
		if banana.type == "slime" then
			banana.y += banana.yspd + sin(t/20)
		end

		--picked up
		if banana.type == "picked" then
			banana.y -= (banana.y*0.5)
			banana.x += ((128-banana.x)*0.1)
		end
		
		-- collisions and out of bounds
	
		if banana.y>130 then --delete banana if off screen
			del(bananas,banana)
		end

		if banana.type == "picked" and banana.y < 0 or banana.x > 130 then
			del(bananas,banana)
		end

	
	end

end



function _update()

	-- ANIM


	-- general anim timer
	anim_timer += 1
	
	-- update every 10 ms
	if anim_timer == 10 then
	-- spin bananas
		if banana_anim == 23 then
			banana_anim = 16
		else
			banana_anim += 1
		end
	anim_timer = 0
	end

	-- tire hit
	if tire.anim then
		if tire.spr < 58 then
			tire.spr += 1
		else
			tire.spr = 56
			tire.anim = false
		end
	end

	-- update functions

	player_update()
	object_update(tire)
	banana_update()

	
	-- banana updates


	
    
	if wavetimer==60 then --every 3 seconds spawn wave
    	create_wave(rnd(evens),rnd(2)+1,rnd(wave_types))
    	wavetimer=0 -- reset timer
	end
   t+=1
   wavetimer+=1
end

function _draw()
	cls()
	-- draw map
	map()

	-- draw all bananas
	for banana in all(bananas) do --draw banana

    	spr(banana_anim,banana.x,banana.y)
	end

	vines = {2,3}
	for i=0,16 do
		spr(2,0,i*8)
		spr(2,120,i*8)  
	end

	-- draw monkey
	--top
	spr(53,player.x,player.y)
	--bottom
	spr(54,player.x,player.y+8)
	--tail
	spr(55,player.x-8,player.y+8)

	--tire & platform

	spr(49,tire.x-8,tire.y+8) -- left bot
	spr(33,tire.x-8,tire.y) -- left top
	spr(51,tire.x,tire.y+8) -- middle bot
	spr(35,tire.x,tire.y) -- middle top
	spr(50,tire.x+8,tire.y+8) -- right bot
	spr(34,tire.x+8,tire.y) -- right top

	spr(tire.spr,tire.x,tire.y) -- tire
	-- debug prints
 	print(player.score)

end  
__gfx__
aaaaaaa900000000000b300000003b00111111111111111122222222222222222222222222222222999999990000000000000000000000000000000000000000
a111111900088000000b3000000b3000111111112121212122222222222222222222222229292929999999990000000000000000000000000000000000000000
a1aaaa190089980000003b00000b3000111111111212121221212121222222222222222292929292999999990000000000000000000000000000000000000000
a1a99919089aa98000003b0000003b00111111112121212122222222222222222222222229292929999999990000000000000000000000000000000000000000
a1a99119089aa9800000b00000003b00111111112222222222222222222222222222222229292929999999991010101000000000000000000000000000000000
a1a1191900899800000b30000000b000111111112121212122222222222222222222222299999999999999990000000000000000000000000000000000000000
a111111900088000000b3000000b3000111111112222222222222222222222222222222299999999999999990101010100000000000000000000000000000000
a99999990000000000003b00000b3000111111111212121222222222222222229292929299999999999999991010101000000000000000000000000000000000
00490000000440000004000000044000000094000000400000040000000400000000000000000000000000000000000000000000000000000000000000000000
0004a700000940000094900000049000007a400000094000009a9000000490000000000000000000000000000000000000000000000000000000000000000000
00009a90000a7900009790000097a00009a90000007aa00000a7a000000aa7000000000000000000000000000000000000000000000000000000000000000000
00009790000aa90000aaa000009aa00009790000007a900000a7a0000009aa000000000000000000000000000000000000000000000000000000000000000000
000097900007a90000aaa000009a70000979000000aa900000a7a0000009aa000000000000000000000000000000000000000000000000000000000000000000
0009aa900007a900009a9000009a700009aa900000aa900000a7a0000009aa000000000000000000000000000000000000000000000000000000000000000000
099aaa0009aaa90000979000009aaa9000aaa990007aa990009a9000099aa7000000000000000000000000000000000000000000000000000000000000000000
00aa700000a99000000a000000099a000007aa00000aaa000004000000aaa0000000000000000000000000000000000000000000000000000000000000000000
00888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00888888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
042f7f70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff2f0f0f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
ff4fffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44944fff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
44f994200ffffffffffffff0ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04fff420999999999999999999999999000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
04fff4449999999999999999999999999999999900888800888888800000000800d1110000000000000000000000000000000000000000000000000000000000
04fff44f999999999999999999999999999999990888888888888880000440080611661000000000000000000000000000000000000000000000000000000000
0444444f44949449499449429944449442999292ff47f70044fff440004000046116005100d11100000000000000000000000000000000000000000000000000
2440244022224222244224204422224222444242ff919100244f440000400444d1600025061166100d1111100000000000000000000000000000000000000000
f40f44000244244242242200222222222222222244fffff02444440000044000d160022561160051d11666110000000000000000000000000000000000000000
ff0ff0000024222222222000244420244224442204ffffff444244000000000011162251d1600025116002510000000000000000000000000000000000000000
0000000000020200202200002222000222202220884ffff0ff0ff000000000000111551011162251111555110000000000000000000000000000000000000000
000000000000000000000000000000000000000088888800ff0ff000000000000011110001115510011111100000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000111100000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0404040404040404040404040404040400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0505050505050505050505050505050500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0606060606060606060606060606060600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0707070707070707070707070707070700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0808080808080808080808080808080800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090909090909090909090909090900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a0a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0300000000000000000000000000000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
311000001b7233f7001b735000001b7251b7331b7251b7003f7002e7003f7001b725337001b7003f7001b7233f7001b7331b7253f7001b7001b7351b7230070300700007001b7001b7001b7001b7001b7351b700
001000200050002504275150251327500025002750002500275000250027515025132750002500275150251327500025002751502513275000250027500025002750002500275150251627500025002750002500
491000000c00016000240002400024000180003f000000002401324043240431803424023240130c0030c00000003070010c0000c000160000c0000c000000000000000000240432403324025240130000300000
901000000324503215032150324503245032150324503215032150324503215032150324503215032150324503215032150324503215032150324503215032150324503215032150324503215032150324503215
01100000264001a4001a4000e400294001d4001d4001d400264001a4001a4000c4002b4001f4001f4001f4001d40011400114000f4001a4000e4000e4000e4001a4000e4000e4000e400184000c4000c4000c400
001000001375613752137521375213742077400772007710137511375213752137521374013753077231375305700117000570011700137551375213755137521375613752137521375213742077400772007710
011000001475614752147521475214742087400872008710147511475214752087520874014753147231475305700117000570011700147551475214755147521475614752147521475214742147401472014710
0110000014551145521455214550145401454214540145401b5411b5301b5161b5421b5301b5161b5421b5301b5161453014510015001453001500145101b5001b555015001b5501b552145001b5521b55201500
0110000013551135501355013550135401354013540135401a5411a5301a5161a5421a5301a5161a5421a5301a5161353013510005001353000500135101a5001a555005001a5501a552135001a5521a55200500
__music__
00 42040106
00 41040307
00 41040109
00 41040308
00 41040209
00 41030208
00 02040106
00 41040307
00 01040302
02 41034302
00 41464344
02 41424344

